<?php

/**
 * This is the model base class for the table "romdb".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Romdb".
 *
 * Columns in table "romdb" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $crc
 * @property string $name
 * @property string $description
 * @property string $category
 * @property string $year
 * @property string $manufacturer
 * @property string $country
 * @property string $publisher
 * @property string $platform
 * @property integer $filesize
 * @property string $flags
 * @property string $version
 * @property string $binfile
 *
 */
abstract class BaseRomdb extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'romdb';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Romdb|Romdbs', $n);
	}

	public static function representingColumn() {
		return 'crc';
	}

	public function rules() {
		return array(
			array('filesize', 'numerical', 'integerOnly'=>true),
			array('crc, platform, flags, version, binfile', 'length', 'max'=>64),
			array('name, description, category, manufacturer, country, publisher', 'length', 'max'=>128),
			array('year', 'length', 'max'=>10),
			array('crc, name, description, category, year, manufacturer, country, publisher, platform, filesize, flags, version, binfile', 'default', 'setOnEmpty' => true, 'value' => null),
			array('crc, name, description, category, year, manufacturer, country, publisher, platform, filesize, flags, version, binfile', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'crc' => Yii::t('app', 'Crc'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'category' => Yii::t('app', 'Category'),
			'year' => Yii::t('app', 'Year'),
			'manufacturer' => Yii::t('app', 'Manufacturer'),
			'country' => Yii::t('app', 'Country'),
			'publisher' => Yii::t('app', 'Publisher'),
			'platform' => Yii::t('app', 'Platform'),
			'filesize' => Yii::t('app', 'Filesize'),
			'flags' => Yii::t('app', 'Flags'),
			'version' => Yii::t('app', 'Version'),
			'binfile' => Yii::t('app', 'Binfile'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('crc', $this->crc, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('category', $this->category, true);
		$criteria->compare('year', $this->year, true);
		$criteria->compare('manufacturer', $this->manufacturer, true);
		$criteria->compare('country', $this->country, true);
		$criteria->compare('publisher', $this->publisher, true);
		$criteria->compare('platform', $this->platform, true);
		$criteria->compare('filesize', $this->filesize);
		$criteria->compare('flags', $this->flags, true);
		$criteria->compare('version', $this->version, true);
		$criteria->compare('binfile', $this->binfile, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}