<?php

/**
 * This is the model base class for the table "videotypes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Videotypes".
 *
 * Columns in table "videotypes" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $intid
 * @property string $extension
 * @property string $playcommand
 * @property integer $f_ignore
 * @property integer $use_default
 *
 */
abstract class BaseVideotypes extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'videotypes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Videotypes|Videotypes', $n);
	}

	public static function representingColumn() {
		return 'extension';
	}

	public function rules() {
		return array(
			array('extension, playcommand', 'required'),
			array('f_ignore, use_default', 'numerical', 'integerOnly'=>true),
			array('extension', 'length', 'max'=>128),
			array('playcommand', 'length', 'max'=>255),
			array('f_ignore, use_default', 'default', 'setOnEmpty' => true, 'value' => null),
			array('intid, extension, playcommand, f_ignore, use_default', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intid' => Yii::t('app', 'Intid'),
			'extension' => Yii::t('app', 'Extension'),
			'playcommand' => Yii::t('app', 'Playcommand'),
			'f_ignore' => Yii::t('app', 'F Ignore'),
			'use_default' => Yii::t('app', 'Use Default'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intid', $this->intid, true);
		$criteria->compare('extension', $this->extension, true);
		$criteria->compare('playcommand', $this->playcommand, true);
		$criteria->compare('f_ignore', $this->f_ignore);
		$criteria->compare('use_default', $this->use_default);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}