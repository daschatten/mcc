<?php

/**
 * This is the model base class for the table "newssites".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Newssites".
 *
 * Columns in table "newssites" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $name
 * @property string $category
 * @property string $url
 * @property string $ico
 * @property string $updated
 * @property integer $podcast
 *
 */
abstract class BaseNewssites extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'newssites';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Newssites|Newssites', $n);
	}

	public static function representingColumn() {
		return 'category';
	}

	public function rules() {
		return array(
			array('name, category, url', 'required'),
			array('podcast', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('category, url, ico', 'length', 'max'=>255),
			array('updated', 'length', 'max'=>10),
			array('ico, updated, podcast', 'default', 'setOnEmpty' => true, 'value' => null),
			array('name, category, url, ico, updated, podcast', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'name' => Yii::t('app', 'Name'),
			'category' => Yii::t('app', 'Category'),
			'url' => Yii::t('app', 'Url'),
			'ico' => Yii::t('app', 'Ico'),
			'updated' => Yii::t('app', 'Updated'),
			'podcast' => Yii::t('app', 'Podcast'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('name', $this->name, true);
		$criteria->compare('category', $this->category, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('ico', $this->ico, true);
		$criteria->compare('updated', $this->updated, true);
		$criteria->compare('podcast', $this->podcast);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}