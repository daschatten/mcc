<?php

/**
 * This is the model base class for the table "phonecallhistory".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Phonecallhistory".
 *
 * Columns in table "phonecallhistory" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $recid
 * @property string $displayname
 * @property string $url
 * @property string $timestamp
 * @property string $duration
 * @property string $directionin
 * @property string $directoryref
 *
 */
abstract class BasePhonecallhistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'phonecallhistory';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Phonecallhistory|Phonecallhistories', $n);
	}

	public static function representingColumn() {
		return 'displayname';
	}

	public function rules() {
		return array(
			array('displayname, url, timestamp, duration, directionin', 'required'),
			array('duration, directionin, directoryref', 'length', 'max'=>10),
			array('directoryref', 'default', 'setOnEmpty' => true, 'value' => null),
			array('recid, displayname, url, timestamp, duration, directionin, directoryref', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'recid' => Yii::t('app', 'Recid'),
			'displayname' => Yii::t('app', 'Displayname'),
			'url' => Yii::t('app', 'Url'),
			'timestamp' => Yii::t('app', 'Timestamp'),
			'duration' => Yii::t('app', 'Duration'),
			'directionin' => Yii::t('app', 'Directionin'),
			'directoryref' => Yii::t('app', 'Directoryref'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('recid', $this->recid, true);
		$criteria->compare('displayname', $this->displayname, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('timestamp', $this->timestamp, true);
		$criteria->compare('duration', $this->duration, true);
		$criteria->compare('directionin', $this->directionin, true);
		$criteria->compare('directoryref', $this->directoryref, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}