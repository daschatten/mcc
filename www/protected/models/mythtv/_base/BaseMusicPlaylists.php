<?php

/**
 * This is the model base class for the table "music_playlists".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MusicPlaylists".
 *
 * Columns in table "music_playlists" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $playlist_id
 * @property string $playlist_name
 * @property string $playlist_songs
 * @property string $last_accessed
 * @property string $length
 * @property integer $songcount
 * @property string $hostname
 *
 */
abstract class BaseMusicPlaylists extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'music_playlists';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MusicPlaylists|MusicPlaylists', $n);
	}

	public static function representingColumn() {
		return 'playlist_name';
	}

	public function rules() {
		return array(
			array('playlist_songs, last_accessed', 'required'),
			array('songcount', 'numerical', 'integerOnly'=>true),
			array('playlist_name', 'length', 'max'=>255),
			array('length', 'length', 'max'=>11),
			array('hostname', 'length', 'max'=>64),
			array('playlist_name, length, songcount, hostname', 'default', 'setOnEmpty' => true, 'value' => null),
			array('playlist_id, playlist_name, playlist_songs, last_accessed, length, songcount, hostname', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'playlist_id' => Yii::t('app', 'Playlist'),
			'playlist_name' => Yii::t('app', 'Playlist Name'),
			'playlist_songs' => Yii::t('app', 'Playlist Songs'),
			'last_accessed' => Yii::t('app', 'Last Accessed'),
			'length' => Yii::t('app', 'Length'),
			'songcount' => Yii::t('app', 'Songcount'),
			'hostname' => Yii::t('app', 'Hostname'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('playlist_id', $this->playlist_id, true);
		$criteria->compare('playlist_name', $this->playlist_name, true);
		$criteria->compare('playlist_songs', $this->playlist_songs, true);
		$criteria->compare('last_accessed', $this->last_accessed, true);
		$criteria->compare('length', $this->length, true);
		$criteria->compare('songcount', $this->songcount);
		$criteria->compare('hostname', $this->hostname, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}