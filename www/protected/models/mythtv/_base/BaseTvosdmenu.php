<?php

/**
 * This is the model base class for the table "tvosdmenu".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Tvosdmenu".
 *
 * Columns in table "tvosdmenu" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $osdcategory
 * @property integer $livetv
 * @property integer $recorded
 * @property integer $video
 * @property integer $dvd
 * @property string $description
 *
 */
abstract class BaseTvosdmenu extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tvosdmenu';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Tvosdmenu|Tvosdmenus', $n);
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('osdcategory, description', 'required'),
			array('livetv, recorded, video, dvd', 'numerical', 'integerOnly'=>true),
			array('osdcategory, description', 'length', 'max'=>32),
			array('livetv, recorded, video, dvd', 'default', 'setOnEmpty' => true, 'value' => null),
			array('osdcategory, livetv, recorded, video, dvd, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'osdcategory' => Yii::t('app', 'Osdcategory'),
			'livetv' => Yii::t('app', 'Livetv'),
			'recorded' => Yii::t('app', 'Recorded'),
			'video' => Yii::t('app', 'Video'),
			'dvd' => Yii::t('app', 'Dvd'),
			'description' => Yii::t('app', 'Description'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('osdcategory', $this->osdcategory, true);
		$criteria->compare('livetv', $this->livetv);
		$criteria->compare('recorded', $this->recorded);
		$criteria->compare('video', $this->video);
		$criteria->compare('dvd', $this->dvd);
		$criteria->compare('description', $this->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}