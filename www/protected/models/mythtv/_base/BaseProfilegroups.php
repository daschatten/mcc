<?php

/**
 * This is the model base class for the table "profilegroups".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Profilegroups".
 *
 * Columns in table "profilegroups" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $name
 * @property string $cardtype
 * @property integer $is_default
 * @property string $hostname
 *
 */
abstract class BaseProfilegroups extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'profilegroups';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Profilegroups|Profilegroups', $n);
	}

	public static function representingColumn() {
		return 'cardtype';
	}

	public function rules() {
		return array(
			array('is_default', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>128),
			array('cardtype', 'length', 'max'=>32),
			array('hostname', 'length', 'max'=>64),
			array('name, cardtype, is_default, hostname', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, cardtype, is_default, hostname', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'cardtype' => Yii::t('app', 'Cardtype'),
			'is_default' => Yii::t('app', 'Is Default'),
			'hostname' => Yii::t('app', 'Hostname'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('cardtype', $this->cardtype, true);
		$criteria->compare('is_default', $this->is_default);
		$criteria->compare('hostname', $this->hostname, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}