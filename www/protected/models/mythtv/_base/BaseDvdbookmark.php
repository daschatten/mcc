<?php

/**
 * This is the model base class for the table "dvdbookmark".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Dvdbookmark".
 *
 * Columns in table "dvdbookmark" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $serialid
 * @property string $name
 * @property integer $title
 * @property integer $audionum
 * @property integer $subtitlenum
 * @property string $framenum
 * @property string $timestamp
 *
 */
abstract class BaseDvdbookmark extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'dvdbookmark';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Dvdbookmark|Dvdbookmarks', $n);
	}

	public static function representingColumn() {
		return 'timestamp';
	}

	public function rules() {
		return array(
			array('timestamp', 'required'),
			array('title, audionum, subtitlenum', 'numerical', 'integerOnly'=>true),
			array('serialid', 'length', 'max'=>16),
			array('name', 'length', 'max'=>32),
			array('framenum', 'length', 'max'=>20),
			array('serialid, name, title, audionum, subtitlenum, framenum', 'default', 'setOnEmpty' => true, 'value' => null),
			array('serialid, name, title, audionum, subtitlenum, framenum, timestamp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'serialid' => Yii::t('app', 'Serialid'),
			'name' => Yii::t('app', 'Name'),
			'title' => Yii::t('app', 'Title'),
			'audionum' => Yii::t('app', 'Audionum'),
			'subtitlenum' => Yii::t('app', 'Subtitlenum'),
			'framenum' => Yii::t('app', 'Framenum'),
			'timestamp' => Yii::t('app', 'Timestamp'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('serialid', $this->serialid, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('title', $this->title);
		$criteria->compare('audionum', $this->audionum);
		$criteria->compare('subtitlenum', $this->subtitlenum);
		$criteria->compare('framenum', $this->framenum, true);
		$criteria->compare('timestamp', $this->timestamp, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}