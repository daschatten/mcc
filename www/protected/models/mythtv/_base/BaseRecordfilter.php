<?php

/**
 * This is the model base class for the table "recordfilter".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Recordfilter".
 *
 * Columns in table "recordfilter" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $filterid
 * @property string $description
 * @property string $clause
 * @property integer $newruledefault
 *
 */
abstract class BaseRecordfilter extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'recordfilter';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Recordfilter|Recordfilters', $n);
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('filterid', 'required'),
			array('newruledefault', 'numerical', 'integerOnly'=>true),
			array('filterid', 'length', 'max'=>10),
			array('description', 'length', 'max'=>64),
			array('clause', 'length', 'max'=>256),
			array('description, clause, newruledefault', 'default', 'setOnEmpty' => true, 'value' => null),
			array('filterid, description, clause, newruledefault', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'filterid' => Yii::t('app', 'Filterid'),
			'description' => Yii::t('app', 'Description'),
			'clause' => Yii::t('app', 'Clause'),
			'newruledefault' => Yii::t('app', 'Newruledefault'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('filterid', $this->filterid, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('clause', $this->clause, true);
		$criteria->compare('newruledefault', $this->newruledefault);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}