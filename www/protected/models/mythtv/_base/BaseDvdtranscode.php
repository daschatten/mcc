<?php

/**
 * This is the model base class for the table "dvdtranscode".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Dvdtranscode".
 *
 * Columns in table "dvdtranscode" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $intid
 * @property string $input
 * @property string $name
 * @property string $sync_mode
 * @property integer $use_yv12
 * @property integer $cliptop
 * @property integer $clipbottom
 * @property integer $clipleft
 * @property integer $clipright
 * @property integer $f_resize_h
 * @property integer $f_resize_w
 * @property integer $hq_resize_h
 * @property integer $hq_resize_w
 * @property integer $grow_h
 * @property integer $grow_w
 * @property integer $clip2top
 * @property integer $clip2bottom
 * @property integer $clip2left
 * @property integer $clip2right
 * @property string $codec
 * @property string $codec_param
 * @property integer $bitrate
 * @property integer $a_sample_r
 * @property integer $a_bitrate
 * @property integer $two_pass
 * @property string $tc_param
 *
 */
abstract class BaseDvdtranscode extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'dvdtranscode';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Dvdtranscode|Dvdtranscodes', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, codec', 'required'),
			array('use_yv12, cliptop, clipbottom, clipleft, clipright, f_resize_h, f_resize_w, hq_resize_h, hq_resize_w, grow_h, grow_w, clip2top, clip2bottom, clip2left, clip2right, bitrate, a_sample_r, a_bitrate, two_pass', 'numerical', 'integerOnly'=>true),
			array('input, sync_mode', 'length', 'max'=>10),
			array('name, codec, codec_param, tc_param', 'length', 'max'=>128),
			array('input, sync_mode, use_yv12, cliptop, clipbottom, clipleft, clipright, f_resize_h, f_resize_w, hq_resize_h, hq_resize_w, grow_h, grow_w, clip2top, clip2bottom, clip2left, clip2right, codec_param, bitrate, a_sample_r, a_bitrate, two_pass, tc_param', 'default', 'setOnEmpty' => true, 'value' => null),
			array('intid, input, name, sync_mode, use_yv12, cliptop, clipbottom, clipleft, clipright, f_resize_h, f_resize_w, hq_resize_h, hq_resize_w, grow_h, grow_w, clip2top, clip2bottom, clip2left, clip2right, codec, codec_param, bitrate, a_sample_r, a_bitrate, two_pass, tc_param', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intid' => Yii::t('app', 'Intid'),
			'input' => Yii::t('app', 'Input'),
			'name' => Yii::t('app', 'Name'),
			'sync_mode' => Yii::t('app', 'Sync Mode'),
			'use_yv12' => Yii::t('app', 'Use Yv12'),
			'cliptop' => Yii::t('app', 'Cliptop'),
			'clipbottom' => Yii::t('app', 'Clipbottom'),
			'clipleft' => Yii::t('app', 'Clipleft'),
			'clipright' => Yii::t('app', 'Clipright'),
			'f_resize_h' => Yii::t('app', 'F Resize H'),
			'f_resize_w' => Yii::t('app', 'F Resize W'),
			'hq_resize_h' => Yii::t('app', 'Hq Resize H'),
			'hq_resize_w' => Yii::t('app', 'Hq Resize W'),
			'grow_h' => Yii::t('app', 'Grow H'),
			'grow_w' => Yii::t('app', 'Grow W'),
			'clip2top' => Yii::t('app', 'Clip2top'),
			'clip2bottom' => Yii::t('app', 'Clip2bottom'),
			'clip2left' => Yii::t('app', 'Clip2left'),
			'clip2right' => Yii::t('app', 'Clip2right'),
			'codec' => Yii::t('app', 'Codec'),
			'codec_param' => Yii::t('app', 'Codec Param'),
			'bitrate' => Yii::t('app', 'Bitrate'),
			'a_sample_r' => Yii::t('app', 'A Sample R'),
			'a_bitrate' => Yii::t('app', 'A Bitrate'),
			'two_pass' => Yii::t('app', 'Two Pass'),
			'tc_param' => Yii::t('app', 'Tc Param'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intid', $this->intid);
		$criteria->compare('input', $this->input, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('sync_mode', $this->sync_mode, true);
		$criteria->compare('use_yv12', $this->use_yv12);
		$criteria->compare('cliptop', $this->cliptop);
		$criteria->compare('clipbottom', $this->clipbottom);
		$criteria->compare('clipleft', $this->clipleft);
		$criteria->compare('clipright', $this->clipright);
		$criteria->compare('f_resize_h', $this->f_resize_h);
		$criteria->compare('f_resize_w', $this->f_resize_w);
		$criteria->compare('hq_resize_h', $this->hq_resize_h);
		$criteria->compare('hq_resize_w', $this->hq_resize_w);
		$criteria->compare('grow_h', $this->grow_h);
		$criteria->compare('grow_w', $this->grow_w);
		$criteria->compare('clip2top', $this->clip2top);
		$criteria->compare('clip2bottom', $this->clip2bottom);
		$criteria->compare('clip2left', $this->clip2left);
		$criteria->compare('clip2right', $this->clip2right);
		$criteria->compare('codec', $this->codec, true);
		$criteria->compare('codec_param', $this->codec_param, true);
		$criteria->compare('bitrate', $this->bitrate);
		$criteria->compare('a_sample_r', $this->a_sample_r);
		$criteria->compare('a_bitrate', $this->a_bitrate);
		$criteria->compare('two_pass', $this->two_pass);
		$criteria->compare('tc_param', $this->tc_param, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}