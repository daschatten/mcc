<?php

/**
 * This is the model base class for the table "dvdinput".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Dvdinput".
 *
 * Columns in table "dvdinput" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $intid
 * @property string $hsize
 * @property string $vsize
 * @property string $ar_num
 * @property string $ar_denom
 * @property string $fr_code
 * @property integer $letterbox
 * @property string $v_format
 *
 */
abstract class BaseDvdinput extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'dvdinput';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Dvdinput|Dvdinputs', $n);
	}

	public static function representingColumn() {
		return 'v_format';
	}

	public function rules() {
		return array(
			array('intid', 'required'),
			array('letterbox', 'numerical', 'integerOnly'=>true),
			array('intid, hsize, vsize, ar_num, ar_denom, fr_code', 'length', 'max'=>10),
			array('v_format', 'length', 'max'=>16),
			array('hsize, vsize, ar_num, ar_denom, fr_code, letterbox, v_format', 'default', 'setOnEmpty' => true, 'value' => null),
			array('intid, hsize, vsize, ar_num, ar_denom, fr_code, letterbox, v_format', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intid' => Yii::t('app', 'Intid'),
			'hsize' => Yii::t('app', 'Hsize'),
			'vsize' => Yii::t('app', 'Vsize'),
			'ar_num' => Yii::t('app', 'Ar Num'),
			'ar_denom' => Yii::t('app', 'Ar Denom'),
			'fr_code' => Yii::t('app', 'Fr Code'),
			'letterbox' => Yii::t('app', 'Letterbox'),
			'v_format' => Yii::t('app', 'V Format'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intid', $this->intid, true);
		$criteria->compare('hsize', $this->hsize, true);
		$criteria->compare('vsize', $this->vsize, true);
		$criteria->compare('ar_num', $this->ar_num, true);
		$criteria->compare('ar_denom', $this->ar_denom, true);
		$criteria->compare('fr_code', $this->fr_code, true);
		$criteria->compare('letterbox', $this->letterbox);
		$criteria->compare('v_format', $this->v_format, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}