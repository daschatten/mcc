<?php

/**
 * This is the model base class for the table "recordmatch".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Recordmatch".
 *
 * Columns in table "recordmatch" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $recordid
 * @property string $chanid
 * @property string $starttime
 * @property string $manualid
 * @property integer $oldrecduplicate
 * @property integer $recduplicate
 * @property integer $findduplicate
 * @property integer $oldrecstatus
 * @property integer $findid
 *
 */
abstract class BaseRecordmatch extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'recordmatch';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Recordmatch|Recordmatches', $n);
	}

	public static function representingColumn() {
		return 'starttime';
	}

	public function rules() {
		return array(
			array('recordid, chanid, starttime, manualid', 'required'),
			array('oldrecduplicate, recduplicate, findduplicate, oldrecstatus, findid', 'numerical', 'integerOnly'=>true),
			array('recordid, chanid, manualid', 'length', 'max'=>10),
			array('oldrecduplicate, recduplicate, findduplicate, oldrecstatus, findid', 'default', 'setOnEmpty' => true, 'value' => null),
			array('recordid, chanid, starttime, manualid, oldrecduplicate, recduplicate, findduplicate, oldrecstatus, findid', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'recordid' => Yii::t('app', 'Recordid'),
			'chanid' => Yii::t('app', 'Chanid'),
			'starttime' => Yii::t('app', 'Starttime'),
			'manualid' => Yii::t('app', 'Manualid'),
			'oldrecduplicate' => Yii::t('app', 'Oldrecduplicate'),
			'recduplicate' => Yii::t('app', 'Recduplicate'),
			'findduplicate' => Yii::t('app', 'Findduplicate'),
			'oldrecstatus' => Yii::t('app', 'Oldrecstatus'),
			'findid' => Yii::t('app', 'Findid'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('recordid', $this->recordid, true);
		$criteria->compare('chanid', $this->chanid, true);
		$criteria->compare('starttime', $this->starttime, true);
		$criteria->compare('manualid', $this->manualid, true);
		$criteria->compare('oldrecduplicate', $this->oldrecduplicate);
		$criteria->compare('recduplicate', $this->recduplicate);
		$criteria->compare('findduplicate', $this->findduplicate);
		$criteria->compare('oldrecstatus', $this->oldrecstatus);
		$criteria->compare('findid', $this->findid);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}