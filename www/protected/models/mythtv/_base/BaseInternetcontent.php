<?php

/**
 * This is the model base class for the table "internetcontent".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Internetcontent".
 *
 * Columns in table "internetcontent" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $name
 * @property string $thumbnail
 * @property integer $type
 * @property string $author
 * @property string $description
 * @property string $commandline
 * @property double $version
 * @property string $updated
 * @property integer $search
 * @property integer $tree
 * @property integer $podcast
 * @property integer $download
 * @property string $host
 *
 */
abstract class BaseInternetcontent extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'internetcontent';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Internetcontent|Internetcontents', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, type, author, description, commandline, version, search, tree, podcast, download', 'required'),
			array('type, search, tree, podcast, download', 'numerical', 'integerOnly'=>true),
			array('version', 'numerical'),
			array('name, thumbnail', 'length', 'max'=>255),
			array('author, host', 'length', 'max'=>128),
			array('updated', 'safe'),
			array('thumbnail, updated, host', 'default', 'setOnEmpty' => true, 'value' => null),
			array('name, thumbnail, type, author, description, commandline, version, updated, search, tree, podcast, download, host', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'name' => Yii::t('app', 'Name'),
			'thumbnail' => Yii::t('app', 'Thumbnail'),
			'type' => Yii::t('app', 'Type'),
			'author' => Yii::t('app', 'Author'),
			'description' => Yii::t('app', 'Description'),
			'commandline' => Yii::t('app', 'Commandline'),
			'version' => Yii::t('app', 'Version'),
			'updated' => Yii::t('app', 'Updated'),
			'search' => Yii::t('app', 'Search'),
			'tree' => Yii::t('app', 'Tree'),
			'podcast' => Yii::t('app', 'Podcast'),
			'download' => Yii::t('app', 'Download'),
			'host' => Yii::t('app', 'Host'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('name', $this->name, true);
		$criteria->compare('thumbnail', $this->thumbnail, true);
		$criteria->compare('type', $this->type);
		$criteria->compare('author', $this->author, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('commandline', $this->commandline, true);
		$criteria->compare('version', $this->version);
		$criteria->compare('updated', $this->updated, true);
		$criteria->compare('search', $this->search);
		$criteria->compare('tree', $this->tree);
		$criteria->compare('podcast', $this->podcast);
		$criteria->compare('download', $this->download);
		$criteria->compare('host', $this->host, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}