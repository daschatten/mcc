<?php

/**
 * This is the model base class for the table "livestream".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Livestream".
 *
 * Columns in table "livestream" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $width
 * @property string $height
 * @property string $bitrate
 * @property string $audiobitrate
 * @property string $samplerate
 * @property string $audioonlybitrate
 * @property string $segmentsize
 * @property string $maxsegments
 * @property string $startsegment
 * @property string $currentsegment
 * @property string $segmentcount
 * @property string $percentcomplete
 * @property string $created
 * @property string $lastmodified
 * @property string $relativeurl
 * @property string $fullurl
 * @property string $status
 * @property string $statusmessage
 * @property string $sourcefile
 * @property string $sourcehost
 * @property string $sourcewidth
 * @property string $sourceheight
 * @property string $outdir
 * @property string $outbase
 *
 */
abstract class BaseLivestream extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'livestream';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Livestream|Livestreams', $n);
	}

	public static function representingColumn() {
		return 'created';
	}

	public function rules() {
		return array(
			array('width, height, bitrate, audiobitrate, samplerate, audioonlybitrate, created, lastmodified, relativeurl, fullurl, statusmessage, sourcefile, sourcehost, outdir, outbase', 'required'),
			array('width, height, bitrate, audiobitrate, samplerate, audioonlybitrate, segmentsize, maxsegments, startsegment, currentsegment, segmentcount, percentcomplete, status, sourcewidth, sourceheight', 'length', 'max'=>10),
			array('relativeurl, sourcefile', 'length', 'max'=>512),
			array('fullurl', 'length', 'max'=>1024),
			array('statusmessage, outdir', 'length', 'max'=>256),
			array('sourcehost', 'length', 'max'=>64),
			array('outbase', 'length', 'max'=>128),
			array('segmentsize, maxsegments, startsegment, currentsegment, segmentcount, percentcomplete, status, sourcewidth, sourceheight', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, width, height, bitrate, audiobitrate, samplerate, audioonlybitrate, segmentsize, maxsegments, startsegment, currentsegment, segmentcount, percentcomplete, created, lastmodified, relativeurl, fullurl, status, statusmessage, sourcefile, sourcehost, sourcewidth, sourceheight, outdir, outbase', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'width' => Yii::t('app', 'Width'),
			'height' => Yii::t('app', 'Height'),
			'bitrate' => Yii::t('app', 'Bitrate'),
			'audiobitrate' => Yii::t('app', 'Audiobitrate'),
			'samplerate' => Yii::t('app', 'Samplerate'),
			'audioonlybitrate' => Yii::t('app', 'Audioonlybitrate'),
			'segmentsize' => Yii::t('app', 'Segmentsize'),
			'maxsegments' => Yii::t('app', 'Maxsegments'),
			'startsegment' => Yii::t('app', 'Startsegment'),
			'currentsegment' => Yii::t('app', 'Currentsegment'),
			'segmentcount' => Yii::t('app', 'Segmentcount'),
			'percentcomplete' => Yii::t('app', 'Percentcomplete'),
			'created' => Yii::t('app', 'Created'),
			'lastmodified' => Yii::t('app', 'Lastmodified'),
			'relativeurl' => Yii::t('app', 'Relativeurl'),
			'fullurl' => Yii::t('app', 'Fullurl'),
			'status' => Yii::t('app', 'Status'),
			'statusmessage' => Yii::t('app', 'Statusmessage'),
			'sourcefile' => Yii::t('app', 'Sourcefile'),
			'sourcehost' => Yii::t('app', 'Sourcehost'),
			'sourcewidth' => Yii::t('app', 'Sourcewidth'),
			'sourceheight' => Yii::t('app', 'Sourceheight'),
			'outdir' => Yii::t('app', 'Outdir'),
			'outbase' => Yii::t('app', 'Outbase'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('width', $this->width, true);
		$criteria->compare('height', $this->height, true);
		$criteria->compare('bitrate', $this->bitrate, true);
		$criteria->compare('audiobitrate', $this->audiobitrate, true);
		$criteria->compare('samplerate', $this->samplerate, true);
		$criteria->compare('audioonlybitrate', $this->audioonlybitrate, true);
		$criteria->compare('segmentsize', $this->segmentsize, true);
		$criteria->compare('maxsegments', $this->maxsegments, true);
		$criteria->compare('startsegment', $this->startsegment, true);
		$criteria->compare('currentsegment', $this->currentsegment, true);
		$criteria->compare('segmentcount', $this->segmentcount, true);
		$criteria->compare('percentcomplete', $this->percentcomplete, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('lastmodified', $this->lastmodified, true);
		$criteria->compare('relativeurl', $this->relativeurl, true);
		$criteria->compare('fullurl', $this->fullurl, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('statusmessage', $this->statusmessage, true);
		$criteria->compare('sourcefile', $this->sourcefile, true);
		$criteria->compare('sourcehost', $this->sourcehost, true);
		$criteria->compare('sourcewidth', $this->sourcewidth, true);
		$criteria->compare('sourceheight', $this->sourceheight, true);
		$criteria->compare('outdir', $this->outdir, true);
		$criteria->compare('outbase', $this->outbase, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}