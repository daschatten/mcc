<?php

/**
 * This is the model base class for the table "eit_cache".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EitCache".
 *
 * Columns in table "eit_cache" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $chanid
 * @property string $eventid
 * @property integer $tableid
 * @property integer $version
 * @property string $endtime
 * @property integer $status
 *
 */
abstract class BaseEitCache extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'eit_cache';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EitCache|EitCaches', $n);
	}

	public static function representingColumn() {
		return array(
			'chanid',
			'eventid',
			'status',
		);
	}

	public function rules() {
		return array(
			array('chanid, tableid, version, endtime', 'required'),
			array('chanid, tableid, version, status', 'numerical', 'integerOnly'=>true),
			array('eventid, endtime', 'length', 'max'=>10),
			array('eventid, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('chanid, eventid, tableid, version, endtime, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'chanid' => Yii::t('app', 'Chanid'),
			'eventid' => Yii::t('app', 'Eventid'),
			'tableid' => Yii::t('app', 'Tableid'),
			'version' => Yii::t('app', 'Version'),
			'endtime' => Yii::t('app', 'Endtime'),
			'status' => Yii::t('app', 'Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('chanid', $this->chanid);
		$criteria->compare('eventid', $this->eventid, true);
		$criteria->compare('tableid', $this->tableid);
		$criteria->compare('version', $this->version);
		$criteria->compare('endtime', $this->endtime, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}