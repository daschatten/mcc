<?php

/**
 * This is the model base class for the table "inuseprograms".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Inuseprograms".
 *
 * Columns in table "inuseprograms" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $chanid
 * @property string $starttime
 * @property string $recusage
 * @property string $lastupdatetime
 * @property string $hostname
 * @property string $rechost
 * @property string $recdir
 *
 */
abstract class BaseInuseprograms extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'inuseprograms';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Inuseprograms|Inuseprograms', $n);
	}

	public static function representingColumn() {
		return 'starttime';
	}

	public function rules() {
		return array(
			array('rechost', 'required'),
			array('chanid', 'length', 'max'=>10),
			array('recusage', 'length', 'max'=>128),
			array('hostname, rechost', 'length', 'max'=>64),
			array('recdir', 'length', 'max'=>255),
			array('starttime, lastupdatetime', 'safe'),
			array('chanid, starttime, recusage, lastupdatetime, hostname, recdir', 'default', 'setOnEmpty' => true, 'value' => null),
			array('chanid, starttime, recusage, lastupdatetime, hostname, rechost, recdir', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'chanid' => Yii::t('app', 'Chanid'),
			'starttime' => Yii::t('app', 'Starttime'),
			'recusage' => Yii::t('app', 'Recusage'),
			'lastupdatetime' => Yii::t('app', 'Lastupdatetime'),
			'hostname' => Yii::t('app', 'Hostname'),
			'rechost' => Yii::t('app', 'Rechost'),
			'recdir' => Yii::t('app', 'Recdir'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('chanid', $this->chanid, true);
		$criteria->compare('starttime', $this->starttime, true);
		$criteria->compare('recusage', $this->recusage, true);
		$criteria->compare('lastupdatetime', $this->lastupdatetime, true);
		$criteria->compare('hostname', $this->hostname, true);
		$criteria->compare('rechost', $this->rechost, true);
		$criteria->compare('recdir', $this->recdir, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}