<?php

/**
 * This is the model base class for the table "gamemetadata".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Gamemetadata".
 *
 * Columns in table "gamemetadata" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $intid
 * @property string $system
 * @property string $romname
 * @property string $gamename
 * @property string $genre
 * @property string $year
 * @property string $publisher
 * @property integer $favorite
 * @property string $rompath
 * @property string $screenshot
 * @property string $fanart
 * @property string $plot
 * @property string $boxart
 * @property string $gametype
 * @property integer $diskcount
 * @property string $country
 * @property string $crc_value
 * @property string $inetref
 * @property integer $display
 * @property string $version
 *
 */
abstract class BaseGamemetadata extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'gamemetadata';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Gamemetadata|Gamemetadatas', $n);
	}

	public static function representingColumn() {
		return 'system';
	}

	public function rules() {
		return array(
			array('screenshot, fanart, plot, boxart', 'required'),
			array('favorite, diskcount, display', 'numerical', 'integerOnly'=>true),
			array('system, romname, gamename, genre, publisher, country', 'length', 'max'=>128),
			array('year', 'length', 'max'=>10),
			array('rompath, screenshot, fanart, boxart', 'length', 'max'=>255),
			array('gametype, crc_value, version', 'length', 'max'=>64),
			array('inetref', 'safe'),
			array('system, romname, gamename, genre, year, publisher, favorite, rompath, gametype, diskcount, country, crc_value, inetref, display, version', 'default', 'setOnEmpty' => true, 'value' => null),
			array('intid, system, romname, gamename, genre, year, publisher, favorite, rompath, screenshot, fanart, plot, boxart, gametype, diskcount, country, crc_value, inetref, display, version', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intid' => Yii::t('app', 'Intid'),
			'system' => Yii::t('app', 'System'),
			'romname' => Yii::t('app', 'Romname'),
			'gamename' => Yii::t('app', 'Gamename'),
			'genre' => Yii::t('app', 'Genre'),
			'year' => Yii::t('app', 'Year'),
			'publisher' => Yii::t('app', 'Publisher'),
			'favorite' => Yii::t('app', 'Favorite'),
			'rompath' => Yii::t('app', 'Rompath'),
			'screenshot' => Yii::t('app', 'Screenshot'),
			'fanart' => Yii::t('app', 'Fanart'),
			'plot' => Yii::t('app', 'Plot'),
			'boxart' => Yii::t('app', 'Boxart'),
			'gametype' => Yii::t('app', 'Gametype'),
			'diskcount' => Yii::t('app', 'Diskcount'),
			'country' => Yii::t('app', 'Country'),
			'crc_value' => Yii::t('app', 'Crc Value'),
			'inetref' => Yii::t('app', 'Inetref'),
			'display' => Yii::t('app', 'Display'),
			'version' => Yii::t('app', 'Version'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intid', $this->intid);
		$criteria->compare('system', $this->system, true);
		$criteria->compare('romname', $this->romname, true);
		$criteria->compare('gamename', $this->gamename, true);
		$criteria->compare('genre', $this->genre, true);
		$criteria->compare('year', $this->year, true);
		$criteria->compare('publisher', $this->publisher, true);
		$criteria->compare('favorite', $this->favorite);
		$criteria->compare('rompath', $this->rompath, true);
		$criteria->compare('screenshot', $this->screenshot, true);
		$criteria->compare('fanart', $this->fanart, true);
		$criteria->compare('plot', $this->plot, true);
		$criteria->compare('boxart', $this->boxart, true);
		$criteria->compare('gametype', $this->gametype, true);
		$criteria->compare('diskcount', $this->diskcount);
		$criteria->compare('country', $this->country, true);
		$criteria->compare('crc_value', $this->crc_value, true);
		$criteria->compare('inetref', $this->inetref, true);
		$criteria->compare('display', $this->display);
		$criteria->compare('version', $this->version, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}